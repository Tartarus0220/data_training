1.配置Git
1).在本地创建ssh key；
ssh-keygen -t rsa -C "13537125493@163.com"

ssh -T git@github.com

2)设置username和email，因为github每次commit都会记录他们。
git config --global user.name Tartarus0220
git config --global user.email "13537125493@163.com"

添加远程地址
git remote add origin git@github.com:Tartarus0220/data_training.git
git remote set-url origin https://github.com/Tartarus0220/data_training.git
加完之后进入.git，打开config，这里会多出一个remote "origin"内容，这就是刚才添加的远程地址，也可以直接修改config来配置远程地址

Git远程仓库地址变更本地如何修改
方法一 通过命令直接修改远程地址
进入git_test根目录
git remote 查看所有远程仓库， git remote xxx 查看指定远程仓库地址
git remote set-url origin http://192.168.100.235:9797/john/git_test.git
方法二 通过命令先删除再添加远程仓库
进入git_test根目录
git remote 查看所有远程仓库， git remote xxx 查看指定远程仓库地址
git remote rm origin
git remote add origin http://192.168.100.235:9797/john/git_test.git
方法三 直接修改配置文件
进入git_test/.git
vim config
修改 [remote “origin”]下面的url即可

git add 命令可将该文件的修改添加到暂存区,告诉 Git 哪些文件的修改应该包含在下一次提交（commit）中
git add read.txt git.txt
添加指定目录到暂存区，包括子目录：
git add [dir]
添加当前目录下的所有文件到暂存区：
git add .
AM 状态的意思是这个文件在我们将它添加到缓存之后又有改动。改动后我们再执行 git add . 命令将其添加到缓,一般都需要进行 git add 操作，从而保存历史版本

查看项目的当前状态:
git status
git status -s

本地提交改动：
git commit -m "提交说明"

提交到远端仓库
git push -u origin master
可以把 master 换成你想要推送的任何分支。

创建一个叫做"feature_x"的分支，并切换过去：
git checkout -b feature_x
切换回主分支：
git checkout master
再把新建的分支删掉：
git branch -d feature_x
除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：
git push origin <branch>


要更新你的本地仓库至最新改动，执行：
git pull
以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。
要合并其他分支到你的当前分支（例如 master），执行：
git merge <branch>
在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现冲突（conflicts）。 这时候就需要你修改这些文件来手动合并这些冲突（conflicts）。改完之后，你需要执行如下命令以将它们标记为合并成功：
git add <filename>
在合并改动之前，你可以使用如下命令预览差异：
git diff <source_branch> <target_branch>